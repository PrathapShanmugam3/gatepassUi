{"ast":null,"code":"import { environment } from '../classes/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = environment.apiUrl;\n  }\n  post(url, data) {\n    console.log(url);\n    return this.http.post(`${this.baseUrl}${url}`, data);\n  }\n  get(url) {\n    return this.http.get(this.baseUrl + url);\n  }\n  getId(url) {\n    return this.http.get(this.baseUrl + url);\n  }\n  update(url, data) {\n    return this.http.put(`${this.baseUrl}${url}`, data);\n  }\n  delete(url) {\n    return this.http.delete(`${this.baseUrl}${url}`);\n  }\n  static #_ = this.ɵfac = function ApiService_Factory(t) {\n    return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ApiService,\n    factory: ApiService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["environment","ApiService","constructor","http","baseUrl","apiUrl","post","url","data","console","log","get","getId","update","put","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/home/prathap/Videos/SeqNodeApi/gate_pass_ui/src/app/apiServices/api.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../classes/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  \n\n  constructor(private http:HttpClient) { }\n\n private baseUrl=environment.apiUrl;\n\n  post(url:string,data:any){\n\n    console.log(url);\n    \n\nreturn this.http.post<any>(`${this.baseUrl}${url}`,data);\n\n  }\n\n  get(url:string){\n\n    return this.http.get<any[]>(this.baseUrl+url);\n  }\n\n  getId(url:string){\n\n    return this.http.get<any>(this.baseUrl+url);\n  }\n\n  update(url:string,data:any){\n\n    return this.http.put(`${this.baseUrl}${url}`,data);\n  }\n\n  delete(url:string){\n    return this.http.delete(`${this.baseUrl}${url}`)\n  }\n\n\n\n\n}\n"],"mappings":"AAEA,SAASA,WAAW,QAAQ,wBAAwB;;;AAKpD,OAAM,MAAOC,UAAU;EAIrBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAEjB,KAAAC,OAAO,GAACJ,WAAW,CAACK,MAAM;EAFM;EAIvCC,IAAIA,CAACC,GAAU,EAACC,IAAQ;IAEtBC,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;IAGpB,OAAO,IAAI,CAACJ,IAAI,CAACG,IAAI,CAAM,GAAG,IAAI,CAACF,OAAO,GAAGG,GAAG,EAAE,EAACC,IAAI,CAAC;EAEtD;EAEAG,GAAGA,CAACJ,GAAU;IAEZ,OAAO,IAAI,CAACJ,IAAI,CAACQ,GAAG,CAAQ,IAAI,CAACP,OAAO,GAACG,GAAG,CAAC;EAC/C;EAEAK,KAAKA,CAACL,GAAU;IAEd,OAAO,IAAI,CAACJ,IAAI,CAACQ,GAAG,CAAM,IAAI,CAACP,OAAO,GAACG,GAAG,CAAC;EAC7C;EAEAM,MAAMA,CAACN,GAAU,EAACC,IAAQ;IAExB,OAAO,IAAI,CAACL,IAAI,CAACW,GAAG,CAAC,GAAG,IAAI,CAACV,OAAO,GAAGG,GAAG,EAAE,EAACC,IAAI,CAAC;EACpD;EAEAO,MAAMA,CAACR,GAAU;IACf,OAAO,IAAI,CAACJ,IAAI,CAACY,MAAM,CAAC,GAAG,IAAI,CAACX,OAAO,GAAGG,GAAG,EAAE,CAAC;EAClD;EAAC,QAAAS,CAAA,G;qBAlCUf,UAAU,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAVpB,UAAU;IAAAqB,OAAA,EAAVrB,UAAU,CAAAsB,IAAA;IAAAC,UAAA,EAFT;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}